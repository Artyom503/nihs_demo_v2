{"version":3,"sources":["pages/DemoPage.js","components/Websocket.js","pages/VotingPage.js","App.js","index.js"],"names":["LoginPage","connecting","qrCode","className","htmlFor","type","id","aria-describedby","placeholder","size","value","DemoPage","websocket","useState","email","name","DoB","data","setData","undefined","connectionId","setConnectionId","setConnecting","onmessage","messageData","message","JSON","parse","e","console","log","process","to","client","W3CWebSocket","userId","Websocket","logInUser","send","onEditorStateChange","text","stringify","username","content","onopen","onClose","Component","cards","avatar","date","header","description","VotingPage","loading","voteForA","setVoteForA","voteForB","setVoteForB","voted","setVoted","open","setOpen","openVoted","setOpenVoted","Divider","Card","Group","doubling","itemsPerRow","stackable","_","map","card","Placeholder","Image","square","src","Content","Header","Line","length","Paragraph","Meta","Description","extra","Button","disabled","onClick","primary","Modal","basic","onOpen","icon","Icon","Actions","color","inverted","axios","post","partyA","partyB","then","response","error","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29d91ce0.chunk.js","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport QRCode from \"qrcode.react\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n\n \nconst DemoPage = ({ websocket }) => {\n  const [data, setData] = useState({ email: \"\", name: \"\", DoB: \"\" });\n  const [connectionId, setConnectionId] = useState(undefined);\n  const [connecting, setConnecting] = useState(true);\n  \n  websocket.onmessage = messageData => {\n    try {\n      const message = JSON.parse(messageData.data);\n      if (message.id) {\n        setConnectionId(message.id);\n        setConnecting(false);\n      } else {\n        setData(message);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  // demo.idem.com.au/register?id=<connectionId>\n  const qrCode = `${process.env.REACT_APP_QR_CODE}/auth?id=${connectionId}`;\n\n  if (data.email === \"\" && data.name === \"\" && data.DoB === \"\") {\n    return LoginPage({ connecting: connecting, qrCode: qrCode });\n  }\n  \n  return <Redirect to='/voting'  /> \n  //DataPage({ email: data.email, name: data.name, DoB: data.DoB });\n  \n}\n\nconst LoginPage = ({ connecting, qrCode }) => {\n  return (\n    <div className=\"App px-16\">\n      <div className=\"font-bold text-3xl py-4 text-left\">\n        <h1>Register a new account</h1>\n      </div>\n      <div className=\"grid grid-cols-2 w-full text-left\">\n        <div className=\"card mr-4\">\n          <div className=\"card-header\">Legacy Way</div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group pb-4\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"user@niche.id\"\n                />\n              </div>\n              <div className=\"form-group pb-4\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"exampleInputPassword1\"\n                  placeholder=\"Password\"\n                />\n              </div>\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Register\n              </button>\n            </form>\n          </div>\n        </div>\n        <div className=\"card ml-4\">\n          <div className=\"card-header\">Niche QR Code authorization</div>\n          <div className=\"card-body grid place-items-center\">\n            {connecting ? (\n              <div> Connecting </div>\n            ) : (\n              <QRCode size={150} value={qrCode} />\n            )}\n          </div>\n          <div>\n            QR Code lists the claims for the user: {qrCode}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst DataPage = ({ email, name, DoB }) => {\n  return (\n    <div className=\"App px-16\">\n      <div className=\"font-bold text-3xl py-4 text-left\">Welcome {email} to exchange.com</div>\n      <div className=\"grid grid-cols-2 w-full text-left\">\n        <div className=\"card mr-4\">\n          <div className=\"card-header\">Details</div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group pb-4\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"exampleInputEmail1\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"user@niche.id\"\n                  value={email}\n                />\n              </div>\n              <div className=\"form-group pb-4\">\n                <label htmlFor=\"Name\">Name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"Name\"\n                  placeholder=\"Name\"\n                  value={name}\n                />\n              </div>\n              <div className=\"form-group pb-4\">\n                <label htmlFor=\"DateOfBirth\">Date Of Birth</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"DateOfBirth\"\n                  placeholder=\"DoB\"\n                  value={DoB}\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"card ml-4\">\n          <div className=\"card-header\">Proofs confirmed. </div>\n          \n          <div className=\"card-body\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DemoPage;\n","import React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport DemoPage from '../pages/DemoPage';\n\nconst client = new W3CWebSocket(process.env.REACT_APP_WS_URL);\nconst userId = \"testUser\"\n\nclass Websocket extends Component {\n  componentDidMount() {\n    client.onopen = () => {\n     console.log('WebSocket Client Connected');\n    };\n    client.onClose = () => {\n      console.log(\"closed websocket\");\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        <DemoPage websocket={client}/>\n      </div>\n    );\n  }\n\n  /* When a user joins, I notify the\n  server that a new user has joined to edit the document. */\n  logInUser = () => {\n    client.send(\"test\");\n  }\n\n  /* When content changes, we send the\n  current content of the editor to the server. */\n  onEditorStateChange = (text) => {\n    client.send(JSON.stringify({\n      type: \"contentchange\",\n      username: userId,\n      content: text\n    }));\n  };\n}\n\nexport default Websocket;","import React, { useState } from \"react\";\r\n// import { render } from \"react-dom\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Image,\r\n  Placeholder,\r\n  Header,\r\n  Icon,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst cards = [\r\n  {\r\n    id: 1,\r\n    avatar:\r\n      \"https://www.indiewire.com/wp-content/uploads/2020/12/aragorn.jpg\",\r\n    date: \"Isildur's heir\",\r\n    header: \"Aragorn\",\r\n    description: \"I will make the MiddleEarth great again\",\r\n  },\r\n  {\r\n    id: 2,\r\n    avatar:\r\n      \"https://static1.cbrimages.com/wordpress/wp-content/uploads/2021/09/Denethor-in-LOTR.jpg\",\r\n    date: \"Viceroy of Gondor\",\r\n    header: \"Denethor\",\r\n    description: \"Gondor has no King. Gondor needs no King.\",\r\n  },\r\n];\r\n\r\nconst VotingPage = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [voteForA, setVoteForA] = useState(0);\r\n  const [voteForB, setVoteForB] = useState(0);\r\n  const [voted, setVoted] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [openVoted, setOpenVoted] = useState(false);\r\n\r\n  // const handleLoadingClick = () => {\r\n  //   setLoading(true);\r\n\r\n  //   setTimeout(() => {\r\n  //     setLoading(false);\r\n  //   }, 3000);\r\n  // };\r\n\r\n  const submitVote = () => {\r\n    axios\r\n      .post(\"https://5fa5e7ad085bf700163de0f9.mockapi.io/vote\", {\r\n        partyA: voteForA,\r\n        partyB: voteForB,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Button loading={loading} onClick={handleLoadingClick} primary>\r\n        Simulate loading\r\n      </Button> */}\r\n      <div>\r\n        {voteForA} - {voteForB}\r\n      </div>\r\n      <Divider />\r\n      <Card.Group doubling itemsPerRow={3} stackable>\r\n        {_.map(cards, (card) => (\r\n          <Card key={card.header}>\r\n            {loading ? (\r\n              <Placeholder>\r\n                <Placeholder.Image square />\r\n              </Placeholder>\r\n            ) : (\r\n              <Image src={card.avatar} />\r\n            )}\r\n\r\n            <Card.Content>\r\n              {loading ? (\r\n                <Placeholder>\r\n                  <Placeholder.Header>\r\n                    <Placeholder.Line length=\"very short\" />\r\n                    <Placeholder.Line length=\"medium\" />\r\n                  </Placeholder.Header>\r\n                  <Placeholder.Paragraph>\r\n                    <Placeholder.Line length=\"short\" />\r\n                  </Placeholder.Paragraph>\r\n                </Placeholder>\r\n              ) : (\r\n                <>\r\n                  <Card.Header>{card.header}</Card.Header>\r\n                  <Card.Meta>{card.date}</Card.Meta>\r\n                  <Card.Description>{card.description}</Card.Description>\r\n                </>\r\n              )}\r\n            </Card.Content>\r\n\r\n            <Card.Content extra>\r\n              <Button\r\n                disabled={voted}\r\n                onClick={() => [\r\n                  card.id === 1\r\n                    ? setVoteForA(voteForA + 1)\r\n                    : setVoteForB(voteForB + 1),\r\n                  setVoted(true),\r\n                  setOpen(true),\r\n                ]}\r\n                primary\r\n              >\r\n                Vote\r\n              </Button>\r\n              <Button\r\n                disabled={\r\n                  (card.id === 1 && voteForA <= 0 ? true : false) ||\r\n                  (card.id === 2 && voteForB <= 0 ? true : false)\r\n                }\r\n                onClick={() => [\r\n                  card.id === 1\r\n                    ? setVoteForA(voteForA - 1)\r\n                    : setVoteForB(voteForB - 1),\r\n                  setVoted(false),\r\n                ]}\r\n              >\r\n                Unvote\r\n              </Button>\r\n            </Card.Content>\r\n          </Card>\r\n        ))}\r\n      </Card.Group>\r\n      <Modal\r\n        basic\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        size=\"small\"\r\n        // trigger={<Button>Basic Modal</Button>}\r\n      >\r\n        <Header icon>\r\n          <Icon name=\"archive\" />\r\n          You are about to vote for this party\r\n        </Header>\r\n        <Modal.Content>\r\n          <p>Are you sure this party is the best one?</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button basic color=\"red\" inverted onClick={() => setOpen(false)}>\r\n            <Icon name=\"remove\" /> No\r\n          </Button>\r\n          <Button\r\n            color=\"green\"\r\n            inverted\r\n            onClick={() => [setOpen(false), submitVote(), setOpenVoted(true)]}\r\n          >\r\n            <Icon name=\"checkmark\" /> Yes\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n      <Modal\r\n        basic\r\n        onClose={() => setOpenVoted(false)}\r\n        onOpen={() => setOpenVoted(true)}\r\n        open={openVoted}\r\n        size=\"small\"\r\n        // trigger={<Button>Basic Modal</Button>}\r\n      >\r\n        <Header icon>\r\n          <Icon name=\"archive\" />\r\n          You have voted!\r\n        </Header>\r\n        \r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VotingPage;","\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Websocket from \"./components/Websocket\";\nimport VotingPage from \"./pages/VotingPage\";\nimport React, {useState} from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path =\"/\" component={Websocket} />\n        <Route exact path =\"/voting\" component={VotingPage} />\n      </Switch>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}